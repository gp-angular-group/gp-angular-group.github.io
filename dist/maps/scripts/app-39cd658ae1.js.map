{"version":3,"sources":["scripts/app-39cd658ae1.js"],"names":["angular","module","authorisationService","$http","this","login","get","logout","authorisationServiceMock","$inject","service","config","$provide","decorator","$delegate","profileService","getProfile","then","response","data","saveProfile","user","post","navbarMenu","title","state","factory","socialNavbar","directive","restrict","templateUrl","messagesDataService","$log","getUserMessages","getUserMessagesComplete","getUserMessagesFailed","error","userMassages","description","getAll","getUMsgs","historyDataService","getUserHistory","getUserHistoryComplete","getUserHistoryFailed","userHistory","image","price","getUHistory","ProfileController","profileData","vm","genders","M","F","submitForm","userForm","$valid","alert","save","info","message","controller","checkLastNameDirective","require","link","scope","element","attributes","ctrl","$validators","modelValue","lastNameError","$isEmpty","lastNameErrorText","length","checkFirstNameDirective","firstNameError","firstNameErrorText","checkAgeDirective","ageError","ageErrorText","NavbarController","$mdSidenav","buildToggler","navID","toggle","debug","toggleLeft","menuSections","backend","$httpBackend","getAllUserMessages","userMessages","getAllUserHistory","whenGET","respond","passThrough","run","MessagesController","messagesData","tglDefenition","index","mshow","userMasseges","toggleDefenition","LoginController","$state","enter","go","HistoryController","historyData","runBlock","routerConfig","$stateProvider","$urlRouterProvider","url","views","viewToolbar","controllerAs","viewMain","resolve","otherwise","constant","malarkey","moment","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-39cd658ae1.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial', [\n      'ngMockE2E',\n      'ngAnimate',\n      'ngCookies',\n      'ngTouch',\n      'ngSanitize',\n      'ngMessages',\n      'ngAria',\n      'ui.router',\n      'ngMaterial',\n      'toastr',\n      'angAccordion'\n    ]);\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .service('authorisationService', authorisationService)\n    .service('authorisationServiceMock', authorisationServiceMock)\n    .config(function($provide){\n      $provide.decorator('authorisationService', function($delegate, authorisationServiceMock) {\n        $delegate = authorisationServiceMock;\n        return $delegate;\n      });\n    });\n\n  /** @ngInject */\n  function authorisationService($http) {\n    this.login = function() {\n      return $http.get('api/login');\n    };\n\n    this.logout = function() {\n      return $http.get('api/logout');\n    };\n  }\n\n  /** @ngInject */\n  function authorisationServiceMock($http) {\n    this.login = function() {\n        return $http.get('app/components/authorisation/mock/login.mock.json');  \n    };\n\n    this.logout = function() {\n      return $http.get('app/components/authorisation/mock/logout.mock.json');\n    };\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .service('profileService', profileService)\n\n  /** @ngInject */\n  function profileService($http) {\n    this.getProfile = function() {\n      return $http.get('https://fathomless-everglades-3680.herokuapp.com/api/user/1')\n        .then(function(response) {\n          return response.data;\n        });\n    };\n\n    this.saveProfile = function(user) {\n      return $http.post('https://fathomless-everglades-3680.herokuapp.com/api/user/1', user);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .factory('navbarMenu', navbarMenu);\n\n  /** @ngInject */\n  function navbarMenu() {\n    return [\n      {\n        title: 'My profile',\n        state: 'profile'\n      },\n      {\n        title: 'My messages',\n        state: 'messages'\n      },\n      {\n        title: 'My history',\n        state: 'history'\n      },\n      {\n        title: 'Log Out',\n        state: 'login'\n      }];\n  }\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .directive('socialNavbar', socialNavbar);\n\n  /** @ngInject */\n  function socialNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html'\n    };\n\n    return directive;\n  }\n\n})();\n(function () {\n  'use strict';\n  // The data file for serverless.\n\n  angular\n    .module('gpSocial')\n    .service('messagesDataService', messagesDataService);\n\n  //@ngInject\n  function messagesDataService($http, $log) {\n    this.userMassages = [\n      {\n        title: 'Theodore Roosevelt',\n        description: 'The pessimist sees difficulty in every opportunity. The optimist sees opportunity in every difficulty.'},\n      {\n        title: 'Winston Churchill',\n        description: 'It\\'s not good enough that we do our best; sometimes we have to do what\\'s required.'\n      },\n      {\n        title: 'Abraham Lincoln',\n        description: 'Character is like a tree and a reputation like a shadow. The shadow is what we think of it; the tree is the real thing.'\n      },\n      {\n        title: 'Funny SMS',\n        description: 'Two goldfish are in a tank. One says to the other, “Do you know how to drive this thing?\"'\n      },\n      {\n        title: 'Text message',\n        description: 'Say good about yourself and you\\’ll be called arrogant; say bad about yourself and you\\’ll be believed.'\n      }\n    ];\n\n    // method for backend mock server\n    this.getAll = function () {\n      return this.userMassages;\n    };\n\n    this.getUMsgs = getUserMessages;\n\n    // Get the message from the remote server\n    function getUserMessages() {\n      return $http.get('/fakeRemoteServer/userMassages')\n            .then(getUserMessagesComplete)\n            .catch(getUserMessagesFailed);\n\n      function getUserMessagesComplete(response) {\n          return response.data;\n      }\n\n      function getUserMessagesFailed(error) {\n          $log.error('XHR Failed for getUserMessages.' + error.data);\n      }\n    }\n\n  }\n}());\n\n(function () {\n  'use strict';\n  // The data file for serverless.\n\n  angular\n    .module('gpSocial')\n    .service('historyDataService', historyDataService);\n\n  //@ngInject\n  function historyDataService($http, $log) {\n    this.userHistory = [\n      {\n        image: 'http://38.media.tumblr.com/avatar_8cc900efa7d0_128.png',\n        title:'Мой заголовок 1',\n        description: 'Моё описание 1',\n        price: 150\n      },\n      {\n        image: 'http://38.media.tumblr.com/avatar_8cc900efa7d0_128.png',\n        title:'Мой заголовок 2',\n        description: 'Моё описание 2',\n        price: 300  \n      }\n    ];\n\n    // method for backend mock server\n    this.getAll = function () {\n      return this.userHistory;\n    };\n\n    this.getUHistory = getUserHistory;\n\n    // Get the message from the remote server\n    function getUserHistory() {\n      return $http.get('/fakeRemoteServer/userHistory')\n            .then(getUserHistoryComplete)\n            .catch(getUserHistoryFailed);\n\n      function getUserHistoryComplete(response) {\n          return response.data;\n      }\n\n      function getUserHistoryFailed(error) {\n          $log.error('XHR Failed for getUserHistory.' + error.data);\n      }\n    }\n\n  }\n}());\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .controller('ProfileController', ProfileController);\n\n  /** @ngInject */\n  function ProfileController(profileService, $log, profileData){\n    var vm = this;\n\n    vm.genders = {\n      M: 'Male',\n      F: 'Female'\n    };\n\n    vm.user = profileData;\n\n    vm.submitForm = function() {\n      // check to make sure the form is completely valid\n      if (vm.userForm.$valid) {\n        alert('our form is amazing');\n      }\n\n    };\n\n    vm.save = function() {\n      $log.info(\"save\");\n      vm.message = true; //временно\n      profileService.saveProfile(vm.user).then(function(){\n        /*vm.message = true;*/\n      });\n    }\n  }\n})();\n(function() {\n  'use strict';\n\n\nangular\n  .module('gpSocial')\n  .directive('checkLastNameDirective', checkLastNameDirective);\n\n  function checkLastNameDirective(){\n    \n    return {\n      require: 'ngModel',\n      link: function (scope, element, attributes, ctrl) {\n          ctrl.$validators.checkLastNameDirective = function (modelValue) {\n              scope.lastNameError = true;\n              if (ctrl.$isEmpty(modelValue)) // if empty, correct value\n              {   \n                  scope.lastNameError = false;\n                  scope.lastNameErrorText = 'Last Name should exist';\n                  return scope.lastNameError;\n              }\n              if (modelValue.length >= 3 && modelValue.length <= 20){ // correct value\n                  scope.lastNameErrorText = 'Last Name should contain at least 3 letters';\n                  scope.lastNameError = true;\n                  return scope.lastNameError;\n              }else{\n                scope.lastNameError = false;\n                return scope.lastNameError;\n              }\n          };\n      }\n    };\n  }\n\n\n\n\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .directive('checkFirstNameDirective', checkFirstNameDirective);\n\n  /** @ngInject */\n  function checkFirstNameDirective(){\n    \n    return {\n      require: 'ngModel',\n      link: function (scope, element, attributes, ctrl) {\n          ctrl.$validators.checkFirstNameDirective = function (modelValue) {\n              scope.firstNameError = true;\n              if (ctrl.$isEmpty(modelValue)) // if empty, correct value\n              {   \n                  scope.firstNameError = false;\n                  scope.firstNameErrorText = 'First Name should exist';\n                  return scope.firstNameError;\n              }\n              if (modelValue.length >= 3 && modelValue.length <= 20){ // correct value\n                  scope.firstNameErrorText = 'First Name should contain at least 3 letters';\n                  scope.firstNameError = true;\n                  return scope.firstNameError;\n              }else{\n                scope.firstNameError = false;\n                return scope.firstNameError;\n              }\n          };\n      }\n    };\n  }\n\n})();\n(function() {\n  'use strict';\n\n \nangular\n  .module('gpSocial')\n  .directive('checkAgeDirective', checkAgeDirective);\n  \n  function checkAgeDirective(){\n    return {\n      require: 'ngModel',\n      link: function (scope, element, attributes, ctrl) {\n          ctrl.$validators.checkAgeDirective = function (modelValue) {\n              scope.ageError = true;\n              if (ctrl.$isEmpty(modelValue)) // if empty, correct value\n              {   \n                  scope.ageError = false;\n                  scope.ageErrorText = 'Age should exist';\n                  return scope.ageError;\n              }\n              if (modelValue >= 3 && modelValue <= 150){ // correct value\n                  scope.ageError =  true;\n                  scope.ageErrorText = 'Your Age should be between 3 and 150 years';\n                  return scope.ageError;\n              }else{\n                scope.ageError = false;\n                return scope.ageError;\n              }\n          };\n      }\n    };\n  }\n\n\n\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .controller('NavbarController', NavbarController);\n\n  /** @ngInject */\n  function NavbarController($mdSidenav, $log, navbarMenu, profileService) {\n    var vm = this;\n\n    vm.toggleLeft = buildToggler('left');\n    vm.menuSections = navbarMenu;\n\n    profileService.getProfile().then(function(user) {\n      vm.user = user;\n    });\n\n    function buildToggler(navID) {\n      return function() {\n        $mdSidenav(navID)\n          .toggle()\n          .then(function () {\n            $log.debug(\"toggle \" + navID + \" is done\");\n          });\n      }\n    }\n  }\n})();\n(function () {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .run([ \"$httpBackend\",\"messagesDataService\",\"historyDataService\", backend]);\n\n  // Mock a server side, return data.\n  function backend($httpBackend, messagesDataService, historyDataService) {\n\n    // $httpBackend.whenGET('app/messages/messages.html').respond(getAllUserMessages);\n    // function getAllUserMessages(method, url, data) {\n    //   var userMessages = messagesDataService.getAll();\n    //   console.log(\"from data service: \" + userMessages[0].title);\n    //   return [200, userMessages, {}];\n    // }\n\n    $httpBackend.whenGET('/fakeRemoteServer/userMassages').respond(getAllUserMessages);\n    function getAllUserMessages() {\n      var userMessages = messagesDataService.getAll();\n      return [200, userMessages, {}];\n    }\n\n    $httpBackend.whenGET('/fakeRemoteServer/userHistory').respond(getAllUserHistory);\n    function getAllUserHistory() {\n      var userHistory = historyDataService.getAll();\n      return [200, userHistory, {}];\n    }\n    // Ignore all other requests\n    $httpBackend.whenGET(/.*/).passThrough();\n  }\n\n}());\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .controller('MessagesController', MessagesController);\n\n  /** @ngInject */\n  function MessagesController(messagesData, $log){\n    var vm = this;\n\n    // Get from server array of objects and prepare for controller uses\n    // UMsgs = [{title:'description},{title:'description'}..]\n    vm.userMasseges = messagesData;\n\n\n    vm.mshow = false;\n    vm.toggleDefenition = tglDefenition;\n    function tglDefenition(index) {\n      $log.info('Click!' + index);\n      vm.mshow = vm.mshow === false ? true: false;\n    }\n\n    $log.info('сообщения');\n  }\n\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .controller('LoginController', LoginController);\n\n    /** @ngInject */\n    function LoginController(authorisationService, $log, $state){\n      var vm = this;\n\n      vm.enter = function() {\n        $log.info(\"get\");\n        authorisationService.login().then(function(){\n           $state.go('profile');\n        });\n      }\n    }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .controller('HistoryController', HistoryController);\n\n  /** @ngInject */\n  function HistoryController(historyData){\n    var vm = this;\n\n    // Get from server array of objects and prepare for controller uses\n    vm.userHistory = historyData;\n\n    // vm.myhistory = [\n    //   {\n    //   image: 'http://38.media.tumblr.com/avatar_8cc900efa7d0_128.png',\n    //   title:'Мой заголовок 1',\n    //   description: 'Моё описание 1',\n    //   price: 150\n    //   },\n    //   {\n    //   image: 'http://38.media.tumblr.com/avatar_8cc900efa7d0_128.png',\n    //   title:'Мой заголовок 2',\n    //   description: 'Моё описание 2',\n    //   price: 300  \n    //   }\n    // ]\n\n\n  }\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('login', {\n        url: '/',\n        views: {\n          'viewToolbar': {\n            templateUrl:  'app/components/navbar/navbar.login.html',\n            controller:   'NavbarController',\n            controllerAs: 'navbar'\n          },\n          'viewMain': {\n            templateUrl:  'app/login/login.html',\n            controller:   'LoginController',\n            controllerAs: 'login'\n          }\n        }\n\n      })\n\n      .state('history', {\n        url: '/history',\n        views: {\n          'viewToolbar': {\n            templateUrl:  'app/components/navbar/navbar.main.html',\n            controller:   'NavbarController',\n            controllerAs: 'navbar'\n          },\n          'viewMain': {\n            templateUrl:  'app/history/history.html',\n            controller:   'HistoryController',\n            controllerAs: 'history'\n          }\n        },\n        resolve: {\n          historyData: function(historyDataService) {\n            return  historyDataService.getUHistory();\n          }\n        }\n      })\n\n      .state('messages', {\n        url: '/messages',\n        views: {\n          'viewToolbar': {\n            templateUrl:  'app/components/navbar/navbar.main.html',\n            controller:   'NavbarController',\n            controllerAs: 'navbar'\n          },\n          'viewMain': {\n            templateUrl:  'app/messages/messages.html',\n            controller:   'MessagesController',\n            controllerAs: 'messages'\n          }\n        },\n        resolve: {\n          messagesData: function(messagesDataService) {\n            return  messagesDataService.getUMsgs();\n          }\n        }\n        \n      })\n\n      .state('profile', {\n        url: '/profile',\n        views: {\n          'viewToolbar': {\n            templateUrl:  'app/components/navbar/navbar.main.html',\n            controller:   'NavbarController',\n            controllerAs: 'navbar'\n          },\n          'viewMain': {\n            templateUrl:  'app/profile/profile.html',\n            controller:   'ProfileController',\n            controllerAs: 'profile'\n          }\n        },\n        resolve: {\n          profileData: function(profileService) {\n            return  profileService.getProfile();\n          }\n        }\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpSocial')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"gpSocial\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/history/history.html\",\"<div flex-xs=\\\"\\\" flex-gt-xs=\\\"50\\\" layout=\\\"column\\\"><md-button class=\\\"md-raised md-primary sort-button\\\" ng-click=\\\"orderByField=\\'price\\';sortType = !sortType\\\">Sort</md-button><md-list layout-padding=\\\"\\\"><md-card ng-repeat=\\\"history in history.userHistory | orderBy:orderByField:sortType\\\"><md-list-item class=\\\"md-2-line\\\"><img ng-src=\\\"{{history.image}}\\\" class=\\\"md-avatar\\\"><div class=\\\"md-list-item-text md-2-line\\\"><h4>{{ history.title }}</h4><p>{{ history.description }}</p></div><div><p layout=\\\"row\\\" layout-align=\\\"center center\\\" class=\\\"price-text\\\">{{ history.price }} $</p></div></md-list-item></md-card></md-list></div>\");\n$templateCache.put(\"app/login/login.html\",\"<div><md-button class=\\\"md-raised md-primary login-button\\\" ng-click=\\\"login.enter()\\\">Log In</md-button></div>\");\n$templateCache.put(\"app/messages/messages.html\",\"<div class=\\\"msg\\\"><h1>Messages</h1><ang-accordion icon-position=\\\"right\\\" close-icon-url=\\\"assets/images/right-icon.png\\\" open-icon-url=\\\"assets/images/down-icon.png\\\"><collapsible-item class=\\\"msg-item\\\" item-title=\\\"Theme {{$index+1}}: {{message.title}}\\\" ng-repeat=\\\"message in messages.userMasseges\\\"><div>{{message.description}}</div></collapsible-item></ang-accordion></div>\");\n$templateCache.put(\"app/profile/profile.html\",\"<div class=\\\"wrapper\\\"><div class=\\\"user-avatar\\\"><img width=\\\"40%\\\" ng-src=\\\"{{ profile.user.avatar }}\\\"></div><h1 class=\\\"greeting\\\"><p>Hi, {{ profile.user.firstName + \\\" \\\" + profile.user.lastName }}!</p></h1><form name=\\\"userForm\\\"><ang-accordion one-at-a-time=\\\"true\\\" icon-position=\\\"right\\\" close-icon-url=\\\"assets/images/right-icon.png\\\" open-icon-url=\\\"assets/images/down-icon.png\\\"><collapsible-item item-title=\\\"FIRST NAME: {{profile.user.firstName}}\\\"><md-input-container class=\\\"input\\\"><input class=\\\"form-control\\\" name=\\\"firstName\\\" ng-model=\\\"profile.user.firstName\\\" check-first-name-directive=\\\"\\\" ng-minlength=\\\"3\\\" ng-maxlength=\\\"12\\\" required=\\\"\\\"><p ng-show=\\\"userForm.firstName.$error.checkFirstNameDirective\\\" class=\\\"help-block\\\">{{firstNameErrorText}}</p></md-input-container></collapsible-item><collapsible-item item-title=\\\"LAST NAME: {{profile.user.lastName}}\\\"><md-input-container class=\\\"input\\\"><input class=\\\"form-control\\\" name=\\\"lastName\\\" ng-model=\\\"profile.user.lastName\\\" check-last-name-directive=\\\"\\\" ng-minlength=\\\"3\\\" ng-maxlength=\\\"12\\\" required=\\\"\\\"><p ng-show=\\\"userForm.lastName.$error.checkLastNameDirective\\\" class=\\\"help-block\\\">{{LastNameErrorText}}</p></md-input-container></collapsible-item><collapsible-item item-title=\\\"AGE: {{profile.user.age}}\\\"><md-input-container><input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"userAge\\\" ng-model=\\\"profile.user.age\\\" check-age-directive=\\\"\\\" ng-min=\\\"5\\\" ng-max=\\\"150\\\" required=\\\"\\\"><p ng-show=\\\"userForm.userAge.$error.checkAgeDirective\\\" class=\\\"help-block\\\">{{ageErrorText}}</p></md-input-container></collapsible-item><collapsible-item item-title=\\\"GENDER: {{ profile.genders[profile.user.gender] }}\\\"><div class=\\\"selecteGender\\\"><md-input-container class=\\\"md-block\\\" flex-gt-sm=\\\"\\\"><md-select ng-model=\\\"profile.user.gender\\\"><md-option ng-repeat=\\\"(genderKey, gender) in profile.genders\\\" value=\\\"{{ genderKey }}\\\">{{ gender }}</md-option></md-select></md-input-container></div></collapsible-item></ang-accordion></form><md-button type=\\\"submit\\\" name=\\\"submitButton\\\" ng-click=\\\"profile.save()\\\" class=\\\"md-raised md-primary\\\" ng-disabled=\\\"userForm.firstName.$error.checkFirstNameDirective || userForm.lastName.$error.checkLastNameDirective|| userForm.userAge.$error.checkAgeDirective\\\">Save</md-button><span ng-show=\\\"profile.message\\\">Saved!</span></div>\");\n$templateCache.put(\"app/components/navbar/home.html\",\"<h1>HELLO!</h1>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<div ng-controller=\\\"NavbarController\\\" layout=\\\"column\\\" ng-cloak=\\\"\\\"><md-toolbar class=\\\"toolbar\\\"><div class=\\\"md-toolbar-tools\\\"><md-button class=\\\"md-icon-button\\\" aria-label=\\\"menu\\\" ng-click=\\\"navbar.toggleLeft()\\\"><md-icon class=\\\"menu-icon-button\\\" md-svg-icon=\\\"assets/images/ic_menu_24px.svg\\\"></md-icon></md-button><p>Text</p></div></md-toolbar><md-sidenav class=\\\"md-sidenav-left\\\" md-component-id=\\\"left\\\"><md-toolbar class=\\\"md-theme-indigo\\\"><div class=\\\"user-avatar\\\"><img width=\\\"40%\\\" ng-src=\\\"{{ navbar.user.avatar }}\\\"></div><h1 class=\\\"md-toolbar-tools\\\">{{ navbar.user.firstName + \\\" \\\" + navbar.user.lastName }}</h1></md-toolbar><md-content layout-padding=\\\"\\\"><md-list-item ng-repeat=\\\"section in navbar.menuSections\\\"><li><a ui-sref=\\\"{{ section.state }}\\\">{{ section.title }}</a></li></md-list-item></md-content></md-sidenav></div>\");\n$templateCache.put(\"app/components/navbar/navbar.login.html\",\"<md-toolbar class=\\\"toolbar\\\"><div class=\\\"md-toolbar-tools\\\"><h1 class=\\\"logo\\\">facepalmbook</h1></div></md-toolbar>\");\n$templateCache.put(\"app/components/navbar/navbar.main.html\",\"<social-navbar></social-navbar>\");}]);"],"sourceRoot":"/source/"}